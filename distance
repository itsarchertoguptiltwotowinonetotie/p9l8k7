#include <stdio.h>
#include <math.h>
#include <stdlib.h>

void distance(int *x, int *y, int n) {
    double minDistance = 1e9;
    int p1, p2 = -1;
    int i, j;
    double distance;
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            distance = sqrt((x[i] - x[j]) * (x[i] - x[j]) +
                            (y[i] - y[j]) * (y[i] - y[j]));
            if (distance < minDistance) {
                minDistance = distance;
                p1 = i;
                p2 = j;
            }
        }
    }
    printf("The closest pair of points is: (%d, %d) and (%d, %d)\n",
           x[p1], y[p1], x[p2], y[p2]);
    printf("************************************\n");
    printf("The minimum distance is: %.2lf\n", minDistance);
    printf("************************************\n");
}

int main() {
    int n;
    printf("Enter the number of points: ");
    scanf("%d", &n);
    while (n < 2) {
        printf("At least two points are required to find the closest pair.\n");
        printf("Enter the number of points: ");
        scanf("%d", &n);
    }
    int *x = (int *)malloc(n * sizeof(int));
    int *y = (int *)malloc(n * sizeof(int));

    if (x == NULL || y == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }
    printf("Enter the points (x y):\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d", &x[i], &y[i]);
    }
    distance(x, y, n);
    free(x);
    free(y);

    return 0;
}
